* {
  box-sizing: border-box;
}

html,
body,
#root {
  margin: 0;
  height: 100%;
  font-family: 'Avenir';
}

.memory-game__wrapper {
  margin: 0;
  height: 100%;
  color: black;
}

.memory-game__wrapper {
  background: linear-gradient(13deg, #d0c0fa, #f5ddff);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 2px solid black;
}

.grid__container {
  height: 500px;
  width: 500px;
  background: linear-gradient(-135deg, #fff, #e8e9eb 600%);
  background: repeating-linear-gradient(45deg, #fafafa, #fafafa 10px, #eee 10px, #eee 12px);
  border: 2px solid black;
  box-shadow: 0 35px 105px -30px rgb(176, 181, 222);
  border-radius: 25px;
  background: contain;
  padding: 2.618em;
}

#grid {
  height: 100%;
  width: 100%;
  display: grid;
  grid-gap: 15px;
  grid-template-columns: repeat(4, 25%);
  grid-auto-rows: 25%;
  align-content: center;
  justify-content: center;
}

.game__wrapper {
  width: 500px;
}

.card {
  font-size: 1.618em;
  position: relative;
  height: 100%;
  width: 100%;
  cursor: pointer;
  transform-style: preserve-3d;
  transition: all 0.5s;
}

.card__side {
  border: 2px solid black;
  box-shadow: 0 3px 10px -3px rgba(0, 0, 0, 0.269);
  border-radius: 15px;
  position: absolute;
  height: 100%;
  width: 100%;
  /* Just with this line below, this now works in safari */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.card__front {
  background: #fafafa;
  transform: rotateY(180deg);
}

.card__back {
  background: linear-gradient(135deg, #b5e8e8, #59dcda 200%);
  transform: rotateY(0deg);
}

/* ANIMATIONS */

.flipped {
  transform: rotateY(180deg);
}

.wiggle {
  animation: 0.5s wiggle linear;
}

.bounce {
  animation: 0.5s bounce linear;
}

/* this animation was resetting the card's transform property */
/* to maintain the property I needed to set rotateY(180deg) on evert frame */
@keyframes wiggle {
  0% {
      transform: rotate(0deg) rotateY(180deg);
  }
  25% {
      transform: rotate(-10deg) rotateY(180deg);
  }
  50% {
      transform: rotate(20deg) rotateY(180deg);
  }
  75% {
      transform: rotate(-5deg) rotateY(180deg);
  }
  100% {
      transform: rotate(0deg) rotateY(180deg);
  }
}

@keyframes bounce {
  0% {
      transform: translateY(0) rotateY(180deg);
  }
  25% {
      transform: translateY(-10px) rotateY(180deg);
  }
  50% {
      transform: translateY(3px) rotateY(180deg);
  }
  75% {
      transform: translateY(-3px) rotateY(180deg);
  }
  100% {
      transform: translateY(0) rotateY(180deg);
  }
}

.game__menu {
  width: 100%;
  display: grid;
  align-items: center;
  grid-template-columns: 1fr 1fr 1fr;
  grid-auto-rows: 1fr;
  padding: 1em 0.618em;
}

#timer {
  text-align: center;
}

.time-unit {
  font-weight: 100;
  margin: 0 1px 0 1px;
}

.game__stats {
  display: inline-flex;
  align-items: center;
  justify-content: flex-end;
}

.stats__stars {
  display: inline-flex;
  margin: 0 0 0 10px;
}

.star {
  display: block;
  background-size: contain;
  height: 18px;
  width: 18px;
}

.modal {
  position: absolute;
  background: rgba(255, 255, 255, 0.623);
  height: 100%;
  width: 100%;
  visibility: hidden;
  display: flex;
  opacity: 0;
  align-items: center;
  justify-content: center;
  transition: all 0.5s;
}

.fade-in {
  opacity: 1;
  visibility: visible;
}

.modal__content {
  background: repeating-linear-gradient(-45deg, #fff, #fff 10px, #fafafa 10px, #fafafa 12px);
  border: 2px solid black;
  border-radius: 15px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.13);
  padding: 1em 1.618em;
  display: flex;
  flex-direction: column;
}

.modal__content h3 {
  margin: 0;
  text-align: center;
}

.modal__content p {
  font-weight: 400;
}

.modal__content button {
  outline: none;
  background: white;
  border: 2px solid black;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  border-radius: 50px;
  padding: 0.618em 1.25em;
  align-self: center;
  display: flex;
  align-items: center;
  font-weight: 600;
  font-size: 14px;
  cursor: pointer;
}

/* .modal__content button::after {
  content: "";
  display: block;
  background: url(../icons/arrow.svg);
  background-size: contain;
  height: 20px;
  width: 20px;
  margin-left: 0.5em;
} */